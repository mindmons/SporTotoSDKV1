// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios18.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name SporTotoSDKV1
import Foundation
@_exported import SporTotoSDKV1
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers final public class SporTotoSDK {
  public static let shared: SporTotoSDKV1.SporTotoSDK
  final public func fetchAgents(onlyPlayable: Swift.Bool = true, completion: @escaping (Swift.Result<[SporTotoSDKV1.Agent], any Swift.Error>) -> Swift.Void)
  @objc deinit
}
final public class ValorantAPI {
  public init()
  final public func fetchAgents(onlyPlayable: Swift.Bool = true, completion: @escaping (Swift.Result<[SporTotoSDKV1.Agent], any Swift.Error>) -> Swift.Void)
  @objc deinit
}
public struct AgentResponse : Swift.Codable {
  public let status: Swift.Int
  public let data: [SporTotoSDKV1.Agent]
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct Agent : Swift.Codable {
  public let uuid: Swift.String
  public let displayName: Swift.String
  public let description: Swift.String
  public let developerName: Swift.String
  public let releaseDate: Swift.String
  public let characterTags: [Swift.String]?
  public let displayIcon: Swift.String?
  public let displayIconSmall: Swift.String?
  public let bustPortrait: Swift.String?
  public let fullPortrait: Swift.String?
  public let fullPortraitV2: Swift.String?
  public let killfeedPortrait: Swift.String?
  public let minimapPortrait: Swift.String?
  public let homeScreenPromoTileImage: Swift.String?
  public let background: Swift.String?
  public let backgroundGradientColors: [Swift.String]?
  public let assetPath: Swift.String
  public let isFullPortraitRightFacing: Swift.Bool
  public let isPlayableCharacter: Swift.Bool
  public let isAvailableForTest: Swift.Bool
  public let isBaseContent: Swift.Bool
  public let role: SporTotoSDKV1.Role?
  public let recruitmentData: SporTotoSDKV1.RecruitmentData?
  public let abilities: [SporTotoSDKV1.Ability]
  public let voiceLine: SporTotoSDKV1.VoiceLine?
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct Role : Swift.Codable {
  public let uuid: Swift.String
  public let displayName: Swift.String
  public let description: Swift.String
  public let displayIcon: Swift.String?
  public let assetPath: Swift.String
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct Ability : Swift.Codable {
  public let slot: Swift.String
  public let displayName: Swift.String
  public let description: Swift.String
  public let displayIcon: Swift.String?
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct RecruitmentData : Swift.Codable {
  public let counterId: Swift.String?
  public let milestoneId: Swift.String?
  public let milestoneThreshold: Swift.Int?
  public let startDate: Swift.String?
  public let endDate: Swift.String?
  public let useLevelVpCostOverride: Swift.Bool?
  public let levelVpCostOverride: Swift.Int?
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct VoiceLine : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
